do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v74=v2(v0(v20,16));if v19 then local v80=0;local v81;while true do if (v80==1) then return v81;end if (v80==0) then v81=v5(v74,v19);v19=nil;v80=1;end end else return v74;end end end);local function v21(v22,v23,v24)if v24 then local v75=(v22/((5 -3)^(v23-(1 + 0 + 0))))%((1018 -(866 + 150))^(((v24-(1 + 0)) -(v23-(4 -3))) + (1 -0))) ;return v75-(v75%(1 + 0 + 0)) ;else local v76=0 -0 ;local v77;while true do if (v76==(0 + 0 + 0)) then v77=(1446 -(186 + 1258))^(v23-(1 + 0)) ;return (((v22%(v77 + v77))>=v77) and (982 -(380 + 601))) or (0 + 0) ;end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39=711 -(200 + 511) ;local v40;local v41;while true do if (v39==(1 + 0)) then return (v41 * (636 -380)) + v40 ;end if (v39==0) then v40,v41=v1(v16,v18,v18 + (164 -((105 -59) + 116)) );v18=v18 + (1529 -(1509 + 18)) ;v39=1 + 0 ;end end end local function v27()local v42=(0 -0) + (618 -(249 + 369)) ;local v43;local v44;local v45;local v46;while true do if (v42==(605 -(602 + 3))) then v43,v44,v45,v46=v1(v16,v18,v18 + (4 -1) );v18=v18 + 4 ;v42=(1653 -(390 + 1262)) + 0 ;end if (v42==(1 -0)) then return (v46 * (16777248 -(4 + 28))) + (v45 * (207505 -141969)) + (v44 * (2104 -(1100 + (1555 -(128 + 679))))) + v43 ;end end end local function v28()local v47=0 + 0 ;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v47==1) then v50=1 + 0 ;v51=(v21(v49,1,256 -(229 + 7) ) * ((1 + 1)^(31 + 1))) + v48 ;v47=350 -(243 + 105) ;end if (v47==(12 -9)) then if (v52==(353 -(252 + 101))) then if (v51==0) then return v53 * (538 -(222 + 228 + 88)) ;else v52=1132 -(1128 + 3) ;v50=290 -(126 + 164) ;end elseif (v52==(3704 -(713 + 944))) then return ((v51==(0 + 0)) and (v53 * (((4630 -3266) -(313 + 1050))/(0 + 0)))) or (v53 * NaN) ;end return v8(v53,v52-(636 + 387) ) * (v50 + (v51/(((215 -(162 + 51)) + 0)^(249 -197)))) ;end if (v47==(242 -(79 + 26 + 135))) then v52=v21(v49,1570 -(1005 + 544) ,31);v53=((v21(v49,129 -97 )==(1297 -(235 + (2710 -1649)))) and  -(1049 -(23 + (1699 -674)))) or ((2 -1) + 0) ;v47=1371 -(1365 + 3) ;end if (v47==(0 + 0 + 0)) then v48=v27();v49=v27();v47=1 -0 ;end end end local function v29(v30)local v54=(3074 -(54 + 1028)) -(6 + 1119 + 867) ;local v55;local v56;while true do if (v54==((0 -0) + 0)) then v55=nil;if  not v30 then v30=v27();if (v30==(0 -(0 + 0))) then return "";end end v54=1 -0 ;end if ((1 + 0)==v54) then v55=v3(v16,v18,(v18 + v30) -(1 + 0) );v18=v18 + v30 ;v54=2;end if (v54==((2484 -1555) -(176 + 750))) then return v6(v56);end if (v54==(193 -(157 + 34))) then v56={};for v82=1, #v55 do v56[v82]=v2(v1(v3(v55,v82,v82)));end v54=(447 -97) -(27 + 320) ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v57=0 + 0 ;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v57==3) then v64=nil;while true do local v84=0;while true do if (v84==(814 -(320 + 494))) then if (v58~=0) then else v59={};v60={};v61={};v62={v59,v60,nil,v61};v58=1 + 0 ;end if (v58~=(5 -3)) then else local v103=1553 -(744 + 809) ;local v104;while true do if (v103==(0 -0)) then v104=978 -(863 + 115) ;while true do if (v104~=(1185 -(10 + 1174))) then else local v113=1152 -(434 + 718) ;while true do if (v113~=(0 + 0)) then else for v117=1,v27() do v61[v117]=v27();end return v62;end end end if (v104==0) then local v114=0 + 0 ;while true do if (v114~=1) then else v104=1;break;end if (v114==(0 + 0)) then for v119=1290 -(775 + 514) ,v27() do local v120=0;local v121;local v122;while true do if (v120==1) then while true do if (v121~=(0 -0)) then else v122=v25();if (v21(v122,1,1)~=(0 -0)) then else local v208=571 -(287 + 284) ;local v209;local v210;local v211;local v212;while true do if (v208~=0) then else local v238=0;local v239;while true do if (v238==0) then v239=0;while true do if (v239==1) then v208=1;break;end if (v239==0) then local v276=0;while true do if (0==v276) then v209=0 + 0 ;v210=nil;v276=1527 -(247 + 1279) ;end if (v276~=1) then else v239=1;break;end end end end break;end end end if (2==v208) then while true do if (v209~=(8 -5)) then else if (v21(v211,3,1413 -(746 + 664) )==1) then v212[1 + 3 ]=v64[v212[4 -0 ]];end v59[v119]=v212;break;end if (v209==2) then local v257=1156 -(215 + 941) ;local v258;while true do if (0==v257) then v258=0;while true do if (v258==0) then if (v21(v211,1045 -(450 + 594) ,132 -(45 + 86) )==1) then v212[2 + 0 ]=v64[v212[1998 -(1280 + 716) ]];end if (v21(v211,2,2)==(911 -(156 + 754))) then v212[3]=v64[v212[3]];end v258=1;end if (v258==(1 + 0)) then v209=3;break;end end break;end end end if (v209==0) then local v259=0;local v260;local v261;while true do if (v259==(0 -0)) then v260=0 -0 ;v261=nil;v259=1;end if (v259==1) then while true do if (v260==0) then v261=414 -(347 + 67) ;while true do if (v261~=(1 -0)) then else v209=2 -1 ;break;end if (v261==(0 + 0)) then v210=v21(v122,4 -2 ,3);v211=v21(v122,198 -(162 + 32) ,6);v261=1;end end break;end end break;end end end if (v209~=(1 + 0)) then else local v262=0 + 0 ;local v263;local v264;while true do if (0~=v262) then else v263=0 + 0 ;v264=nil;v262=3 -2 ;end if (v262==(1 -0)) then while true do if (v263==(0 + 0)) then v264=721 -(74 + 647) ;while true do if (v264==(1 + 0)) then v209=5 -3 ;break;end if (v264==0) then local v292=670 -(531 + 139) ;while true do if (v292~=1) then else v264=1 -0 ;break;end if (v292==0) then v212={v26(),v26(),nil,nil};if (v210==(1796 -(84 + 1712))) then local v296=0 -0 ;local v297;local v298;while true do if (v296==0) then v297=380 -(270 + 110) ;v298=nil;v296=1;end if (v296==1) then while true do if (v297==(0 + 0)) then v298=0;while true do if (0~=v298) then else v212[764 -(204 + 557) ]=v26();v212[1 + 3 ]=v26();break;end end break;end end break;end end elseif (v210==(691 -(283 + 407))) then v212[2 + 1 ]=v27();elseif (v210==2) then v212[3]=v27() -((1348 -(467 + 879))^(34 -18)) ;elseif (v210==(1 + 2)) then local v303=1100 -(1088 + 12) ;local v304;local v305;while true do if (v303~=(92 -(46 + 45))) then else while true do if (v304==(0 -0)) then v305=1500 -(345 + 1155) ;while true do if (v305==0) then v212[3]=v27() -(2^16) ;v212[1 + 3 ]=v26();break;end end break;end end break;end if (v303~=(0 -0)) then else local v311=0 -0 ;while true do if (0==v311) then v304=1763 -(1224 + 539) ;v305=nil;v311=1;end if (v311==1) then v303=1 + 0 ;break;end end end end end v292=1;end end end end break;end end break;end end end end break;end if (v208==1) then local v240=0;while true do if (v240==(1609 -(124 + 1485))) then local v265=0 -0 ;while true do if (v265~=(0 -0)) then else v211=nil;v212=nil;v265=1;end if ((2 -1)==v265) then v240=2 -1 ;break;end end end if (v240==(1 + 0)) then v208=2;break;end end end end end break;end end break;end if ((0 + 0)~=v120) then else v121=0;v122=nil;v120=1917 -(102 + 1814) ;end end end for v123=2 -1 ,v27() do v60[v123-1 ]=v33();end v114=1;end end end end break;end end end v84=1;end if (v84~=1) then else if ((2 -1)~=v58) then else local v105=0 + 0 ;while true do if (v105==(1821 -(1490 + 331))) then v63=v27();v64={};v105=1 -0 ;end if (v105==(1319 -(1225 + 93))) then for v108=2 -1 ,v63 do local v109=0 + 0 ;local v110;local v111;local v112;while true do if (1==v109) then v112=nil;while true do if (v110~=(0 + 0)) then else local v125=0;while true do if (v125==0) then v111=v25();v112=nil;v125=1;end if (v125~=1) then else v110=1122 -(298 + 823) ;break;end end end if ((1 + 0)==v110) then if (v111==(2 -1)) then v112=v25()~=0 ;elseif (v111==(1 + 1)) then v112=v28();elseif (v111==3) then v112=v29();end v64[v108]=v112;break;end end break;end if (0~=v109) then else v110=0 + 0 ;v111=nil;v109=1;end end end v62[3]=v25();v105=2;end if (2==v105) then v58=4 -2 ;break;end end end break;end end end break;end if (1~=v57) then else local v78=0;while true do if (v78==0) then v60=nil;v61=nil;v78=1552 -(1342 + 209) ;end if (v78==(2 -1)) then v57=2 + 0 ;break;end end end if (v57~=(0 -0)) then else local v79=1764 -(1437 + 327) ;while true do if (v79==(1383 -(1162 + 220))) then v57=1291 -(489 + 801) ;break;end if (v79==0) then v58=0 -0 ;v59=nil;v79=1 + 0 ;end end end if (v57~=(1 + 1)) then else v62=nil;v63=nil;v57=10 -7 ;end end end local function v34(v35,v36,v37)local v65=v35[1];local v66=v35[2];local v67=v35[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==2) then v73=nil;v73=function()local v85=v65;local v86=v66;local v87=v67;local v88=v32;local v89={};local v90={};local v91={};for v95=0 + 0 ,v72 do if ((v95>=v87) or ((6227 -(695 + 1178))<(1324 + 1539))) then v89[v95-v87 ]=v71[v95 + (2 -1) ];else v91[v95]=v71[v95 + (2 -1) ];end end local v92=(v72-v87) + 1 + 0 ;local v93;local v94;while true do local v96=0 -0 ;local v97;while true do if (((0 -0)==v96) or ((6323 -(516 + 1353))==(2163 + 1417))) then v97=0 -0 ;while true do if ((v97==(1 + 0)) or ((113 + 741)>=1424)) then if (((11908 -7030)>=(4286 -(280 + 1261 + 82))) and (v94<=(51 -38))) then if (((1382 + (1661 -(491 + 932)))<=(6 + 2899)) and (v94<=(6 + (838 -(180 + 658))))) then if ((v94<=(1 + 1)) or (((3488 -(23 + 77)) + 526)<(2361 -(95 + 958)))) then if ((v94<=(0 -0)) or (((15592 -(905 + 266)) -(22293 -11614))<(97 -65))) then v91[v93[1019 -(464 + 553) ]]=v36[v93[3 + 0 ]];elseif ((4516<(2532 + 2369)) and (v94>1)) then v91[v93[251 -(65 + 184) ]]=v34(v86[v93[660 -(221 + 436) ]],nil,v37);else v91[v93[122 -(49 + 71) ]][v93[2 + 1 ]]=v93[1017 -(382 + 631) ];end elseif (((1108 -709)<=(2232 + 2489)) and (v94<=(14 -10))) then if (((3634 -(33 + 17))>=(1037 -269)) and (v94==3)) then v91[v93[5 -3 ]]();else v91[v93[2 + 0 ]]=v37[v93[3 + 0 ]];end elseif (((873 -275)<(4808 -2810)) and (v94==(1544 -(980 + 559)))) then if ((v91[v93[2]]==v93[10 -6 ]) or ((1791 + 1032)<=(1976 -1143))) then v69=v69 + (1 -0) ;else v69=v93[8 -5 ];end elseif ((v93[2 + 0 ]==v91[v93[1851 -(898 + 949) ]]) or ((6042 -(1233 + 374))==(1995 -(202 + 580)))) then v69=v69 + (1663 -(694 + 968)) ;else v69=v93[756 -(576 + 161 + 16) ];end elseif ((v94<=(1146 -(599 + 538))) or ((219 + 257)>(1959 + 1077))) then if ((v94<=(1395 -(1007 + 381))) or ((4735 -(835 + 901))>=(1713 + 1616))) then local v129=564 -(113 + 34 + 417) ;local v130;local v131;local v132;while true do if (((14079 -10346)<(373 + 1721 + 1851)) and (v129==(2 -1))) then v132=nil;while true do if (((0 -0)==v130) or ((5141 -(613 + 473))==(1662 -(212 + 1030)))) then v131=v93[6 -3 ];v132=v91[v131];v130=(4 + 0) -3 ;end if ((v130==(1 -0)) or ((4564 -3012)>(4750 -(1574 + 319)))) then for v213=v131 + (500 -(456 + 43)) ,v93[6 -(2 -0) ] do v132=v132   .. v91[v213] ;end v91[v93[5 -3 ]]=v132;break;end end break;end if (((2752 -737)>(2087 -(1069 + 1))) and (v129==(225 -(55 + 170)))) then v130=0 + 0 ;v131=nil;v129=1560 -(419 + 1094 + 46) ;end end elseif (((664 + (9023 -5931))>(3882 -2023)) and (v94>((15 -8) + 1))) then local v143=0 -0 ;local v144;local v145;local v146;while true do if ((v143==(941 -((2243 -(1428 + 108)) + 233))) or ((221 + (4160 -(1044 + 428)))<(4477 -2083))) then v146=nil;while true do if ((v144==(579 -(419 + 159))) or ((2219 -(3344 -(1153 + 784)))>4290)) then while true do if (((1194 -(303 + 414))<=(1068 + 894)) and (v145==(1084 -(628 + 456)))) then v146=v93[2 + 0 ];v91[v146]=v91[v146](v91[v146 + ((1 + 0) -0) ]);break;end end break;end if (((537 + 21)==(1326 -(301 + 467))) and (v144==(0 -0))) then local v214=1032 -(303 + 729) ;while true do if ((v214==(0 -0)) or ((13 + 4059)<=(755 + 2874))) then v145=0 -0 ;v146=nil;v214=1 + 0 ;end if (((2303 -795)<=(11547 -7458)) and (v214==(1 + 0))) then v144=1 + 0 ;break;end end end end break;end if ((v143==(626 -((154 -75) + 547))) or ((14620 -11509)>=(5598 -(192 + 1439)))) then v144=0 + 0 ;v145=nil;v143=1;end end else v91[v93[1398 -((5052 -4032) + 376) ]][v93[5 -2 ]]=v91[v93[1752 -((2942 -(47 + 1619)) + 472) ]];end elseif ((v94<=(413 -(332 + 70))) or (((2353 + 6990) -4871)==(2126 + 594))) then if ((v94==(1276 -(707 + 559))) or ((3941 -(426 + 974))>=(4709 -(90 + (1460 -(554 + 855)))))) then local v149=0 -(0 -0) ;local v150;local v151;while true do if ((v149==((0 -0) + 0)) or ((7110 -4939)<(3021 -(1711 + 112 + 40)))) then v150=0 -0 ;v151=nil;v149=563 -(531 + 31) ;end if (((854 -(161 + 692))==v149) or ((68 + 1168)==2914)) then while true do if ((v150==(0 + 0)) or ((536 + 5 + 333)==(3844 -((1093 -759) + 1471)))) then v151=v93[9 -(698 -(79 + 612)) ];v91[v151](v13(v91,v151 + 1 ,v70));break;end end break;end end else v91[v93[2]]=v93[3];end elseif (((1316 + (7194 -3536))>=(2098 + 2445)) and (v94==(8 + 4))) then local v154=1408 -(510 + 898) ;local v155;local v156;local v157;while true do if ((v154==((450 -249) -(14 + 186))) or ((2085 -1372)>(2757 -(577 + 376)))) then v157=nil;while true do if ((v155==(1 + 0)) or (4378>=(6795 -(235 + (5832 -4203))))) then v91[v156 + 1 + 0 ]=v157;v91[v156]=v157[v93[13 -9 ]];break;end if (((4608 -2841)==(7304 -5537)) and (v155==(433 -((1039 -729) + 123)))) then local v219=0 -0 ;while true do if ((v219==(1 + 0)) or ((9555 -5661)<(1954 -((1727 -(498 + 760)) + 151)))) then v155=1;break;end if ((v219==(0 -0)) or ((5215 -(24 + 447))<3476)) then local v248=0 + 0 ;while true do if ((v248==(1 -0)) or ((26 -16)>(5692 -2287))) then v219=503 -(284 + 218) ;break;end if (((1744 -(940 + 804))==v248) or ((321 + 1205)>(1347 + 1356))) then v156=v93[4 -2 ];v157=v91[v93[3 + 0 ]];v248=454 -(412 + 41) ;end end end end end end break;end if ((v154==((369 + 925) -(946 + 26 + 322))) or ((377 + 34)==(9776 -5122))) then local v195=0 + 0 ;while true do if (((0 + 0)==v195) or ((1122 -(289 + 828))==(4864 -(198 + 1)))) then v155=0 + 0 ;v156=nil;v195=1 + 0 ;end if ((v195==(1 + 0)) or ((881 + 2749)>4422)) then v154=1 + 0 ;break;end end end end else local v158=0 -0 ;local v159;while true do if (((4432 -(328 + 305))==(2456 + 1343)) and (v158==(900 -(200 + 700)))) then v159=v93[634 -(30 + 602) ];v91[v159](v91[v159 + (1 -0) ]);break;end end end elseif ((v94<=((754 -(737 + 14)) + 17)) or ((6280 -(1329 + 120))<=(5647 -2613))) then if ((v94<=(1815 -(1149 + 650))) or ((2115 -(2013 -673))==(2739 -((490 -327) + 184)))) then if ((((8144 -4971) -1708)==(3114 -(1161 + 488))) and (v94<=(5 + 9))) then local v133=1408 -((2843 -1940) + 505) ;local v134;local v135;local v136;local v137;while true do if ((v133==(965 -(356 + 608))) or ((1345 + 2348)<(13 + 2376))) then v136=nil;v137=nil;v133=5 -3 ;end if (((2095 + 1386)==((1756 -1199) + 2924)) and (v133==(0 -0))) then v134=0 + 0 ;v135=nil;v133=(70 -(51 + 18)) -(0 + 0) ;end if (((3757 + 147)>(3266 + 326)) and (v133==(2 + 0))) then while true do if (((1151 -(479 + 387))==(1945 -(1014 + 646))) and (v134==(1 + 0))) then v137=nil;while true do if (((3594 -2468)<=(9103 -6375)) and (v135==(1 + 0))) then for v241=552 -(459 + 92) , #v90 do local v242=0 -(0 -0) ;local v243;local v244;local v245;while true do if (((3218 -(1308 + 84))==(3335 -(728 + 781))) and (((8 -6) -1)==v242)) then v245=nil;while true do if (((9082 -4159)==(353 + 4570)) and ((1055 -(712 + 343))==v243)) then local v277=0;while true do if ((((1140 -(37 + 410)) + 3477)>=((7226 -(625 + 1215)) -3221)) and ((1 + 0 + 0)==v277)) then v243=153 -(48 + 4 + 100) ;break;end if ((v277==((0 -0) -0)) or ((1262 + 3408)<=2905)) then v244=0 + 0 ;v245=nil;v277=2 -1 ;end end end if (((1 + 170)==(446 -275)) and ((451 -(122 + 328))==v243)) then while true do if (((0 + 0 + 0)==v244) or ((11757 -7026)<(6426 -(514 + 1433)))) then v245=v90[v241];for v281=0 + 0 , #v245 do local v282=0 -0 ;local v283;local v284;local v285;local v286;while true do if (((2657 -1860)>=(1075 -499)) and ((1830 -((2636 -(502 + 866)) + 562))==v282)) then v283=926 -(26 + 900) ;v284=nil;v282=1 -0 ;end if ((v282==(1 + 0 + 0)) or ((2121 -(1046 + 428))>(265 + 2056))) then v285=nil;v286=nil;v282=2 + 0 ;end if ((v282==(1357 -(555 + 800))) or ((2486 -(172 + 112))>=(895 + 351 + 2776))) then while true do if (((5748 -(1685 + 113))>=(16261 -12427)) and (v283==(2 -1))) then v286=v284[714 -(235 + 477) ];if (((v285==v91) and (v286>=v136)) or ((3453 -(6 + 94))<=(260 + (1381 -(297 + 776))))) then local v299=0 -0 ;local v300;while true do if ((v299==(0 -0)) or ((106 + 3243)<(3075 -(455 + 1409)))) then v300=838 -(367 + 471) ;while true do if ((2629==(10042 -7413)) and (v300==(0 -(0 + 0)))) then v137[v286]=v285[v286];v284[1 + 0 ]=v137;break;end end break;end end end break;end if ((v283==(0 -0)) or ((7215 -(5243 -2125))<=(249 + 485))) then v284=v245[v281];v285=v284[2 -1 ];v283=59 -(22 + 36) ;end end break;end end end break;end end break;end end break;end if (((74 + 1419)<((7205 -(1286 + 448)) -(199 + 1411))) and (v242==(0 + 0))) then v243=0 -0 ;v244=nil;v242=1516 -(1253 + 262) ;end end end break;end if ((v135==(0 + 0)) or ((6217 -3600)>=(4822 -1711))) then local v227=0 -(740 -(33 + 707)) ;while true do if (((1722 + 815)<(6229 -(803 + 1037))) and (v227==(1662 -(253 + 1408)))) then v135=1 + 0 ;break;end if ((v227==(105 -(52 + 53))) or (3349<=(2446 -(145 + 372)))) then v136=v93[1 + 1 + 0 ];v137={};v227=1;end end end end break;end if ((v134==((466 + 427) -(98 + 795))) or ((3339 -(159 + 1679))>=(8226 -4508))) then local v204=1189 -(142 + (1787 -(647 + 93))) ;while true do if (((2035 -((1454 -1073) + 588))>=(207 + 276)) and (v204==(0 + 0))) then v135=788 -(660 + 128) ;v136=nil;v204=(1 + 0) -0 ;end if ((v204==(1170 -(97 + 1072))) or ((5298 -(85 + 1400))<1440)) then v134=746 -(118 + 627) ;break;end end end end break;end end elseif ((v94==(27 -(818 -(374 + 432)))) or (((4802 -(663 + 788)) -1830)==(1564 -(1100 + 67)))) then v91[v93[5 -3 ]]={};else for v190=v93[657 -(109 + 546) ],v93[399 -(81 + 17 + 298) ] do v91[v190]=nil;end end elseif ((v94<=(52 -34)) or (263>=((19900 -14822) -(895 + 408)))) then if ((v94==(16 + 1)) or ((9660 -5850)<=(3482 -(204 + 246)))) then v91[v93[486 -(250 + 234) ]]=v91[v93[983 -(715 + 265) ]];else local v163=0 + (0 -0) ;local v164;local v165;local v166;while true do if (((0 + 0)==v163) or (4845<=(8096 -3979))) then v164=1379 -(1349 + 30) ;v165=nil;v163=413 -(377 + 35) ;end if (((1779 -(125 + 173))>(1286 -((109 -69) + 58))) and ((1 + 0)==v163)) then v166=nil;while true do if ((v164==(1 -0)) or ((4712 -2703)==(1139 + 91))) then while true do if (((1762 + 2445)<(14015 -9027)) and (((832 -(69 + 680)) -((205 -140) + 18))==v165)) then v166=v93[388 -(210 + 176) ];v91[v166](v13(v91,v166 + (1 -0) ,v93[9 -6 ]));break;end end break;end if ((v164==(0 + 0)) or ((1962 -1295)>(2318 + 2590))) then v165=140 -(120 + 20) ;v166=nil;v164=1 + 0 ;end end break;end end end elseif ((v94==((3154 -(1140 + 794)) -(1105 + 35 + 61))) or ((3757 -(556 + 276))==(1220 -818))) then local v167=454 -((1305 -(470 + 666)) + 285) ;local v168;local v169;while true do if ((v167==(1 + 0)) or ((880 -337)>=(3231 -1707))) then while true do if ((v168==(0 -(0 + 0))) or ((365 + 437)<(803 -(210 + 484)))) then v169=v93[5 -3 ];v91[v169]=v91[v169](v13(v91,v169 + (730 -(699 + 30)) ,v93[(361 + 749) -((1322 -966) + 751) ]));break;end end break;end if ((v167==(0 + 0)) or ((8511 -(4956 + 455))<(4887 -3691))) then v168=(4828 -3524) -(1248 + (234 -(170 + 8))) ;v169=nil;v167=1 + 0 ;end end else local v170=901 -(403 + 498) ;local v171;local v172;local v173;local v174;while true do if ((v170==(0 + (464 -(441 + 23)))) or ((13513 -8926)<=(4909 -2587))) then v171=(0 -0) -0 ;v172=nil;v170=1 + 0 ;end if (((5030 -(602 + 300))>(8163 -(7788 -(1625 + 111)))) and (v170==(1510 -(1325 + 183)))) then while true do if ((v171==2) or ((6199 -(571 + (2857 -(1351 + 575))))<=(814 + 2060))) then for v228=1768 -(149 + 1618) ,v93[3 + 1 ] do local v229=1497 -(216 + 1281) ;local v230;local v231;while true do if ((v229==(321 -(202 + 118))) or ((186 + 1543)>=(4204 -1791))) then while true do if (((4566 -(41 + 213))>=(2763 -((801 -589) + 593))) and (v230==(1103 -(173 + 929)))) then if ((v231[(1 -0) + 0 ]==(46 -29)) or ((6810 -4065)>(3012 + 1885))) then v174[v228-(2 -1) ]={v91,v231[3]};else v174[v228-(1 + 0) ]={v36,v231[3 -0 ]};end v90[ #v90 + 1 ]=v174;break;end if (((1217 + 380)==(4609 -3012)) and (v230==(0 + 0))) then v69=v69 + 1 + 0 ;v231=v85[v69];v230=1;end end break;end if ((v229==(0 -0)) or ((11411 -(16053 -9051))<=(3701 -(297 + 1018)))) then v230=(139 + 1142) -(795 + 486) ;v231=nil;v229=3 -2 ;end end end v91[v93[7 -(4 + 1) ]]=v34(v172,v173,v37);break;end if ((v171==((1 -0) + 0)) or ((3064 -1189)<=(1573 -(1054 + 453)))) then v174={};v173=v10({},{__index=function(v223,v224)local v232=114 -(110 + 4) ;local v233;local v234;while true do if (((930 + 2871)>=(1859 -(1265 + (293 -175)))) and (v232==(0 + 0))) then local v253=0 + 0 + 0 ;while true do if ((v253==(1 + 0)) or ((7976 -4045)==(486 -(133 + 82)))) then v232=1 + 0 ;break;end if (((2199 + 1742)>=(4411 -(5074 -1688))) and (v253==0)) then v233=0 + 0 ;v234=nil;v253=(4 + 0) -3 ;end end end if ((2105>=(1361 + 423)) and (v232==1)) then while true do if (((621 + 1199)>(152 -((1744 -(916 + 811)) + 12))) and (v233==(506 -(170 + 336)))) then local v272=0 -0 ;local v273;while true do if ((v272==(0 -0)) or ((691 + (6103 -4827))>=(8180 -(8416 -4644)))) then v273=0 + 0 ;while true do if ((((3792 -1129) -1511)<(10868 -(8605 -(443 + 778)))) and (v273==(1145 -(1140 + 5)))) then v234=v174[v224];return v234[1 -0 ][v234[(3 -1) + (0 -0) ]];end end break;end end end end break;end end end,__newindex=function(v223,v224,v225)local v235=1788 -((2717 -(1368 + 378)) + 817) ;local v236;local v237;while true do if ((v235==(1 -0)) or ((3347 -((78 -59) + 1333))==((10101 + 252) -(8175 -(108 + 1414))))) then while true do if ((v236==(0 + 0)) or ((7005 -5277)==((3429 -(765 + 398)) -(404 + 1162)))) then v237=v174[v224];v237[1469 -(988 + 480) ][v237[1 + 1 ]]=v225;break;end end break;end if (((2785 -(245 + 299))<(1803 + 754)) and (v235==(0 + 0))) then v236=(0 -0) + 0 ;v237=nil;v235=1463 -(567 + 895) ;end end end});v171=2 -0 ;end if (((3337 -(884 + 394))>=(110 + (106 -77))) and ((0 + 0)==v171)) then v172=v86[v93[6 -3 ]];v173=nil;v171=1 -0 ;end end break;end if ((v170==(1 -(0 + 0))) or ((4333 -(496 + 68))<=(2139 + 1611))) then v173=nil;v174=nil;v170=1364 -(1311 + 36 + 15) ;end end end elseif ((v94<=(1688 -(1431 + 233))) or ((1609 -773)==(4653 -3463))) then if (((7678 -2936)==((17770 + 670) -13698)) and (v94<=22)) then if (((1535 + 1758)>(641 + (1380 -(520 + 51)))) and (v94==(11 + 2 + 8))) then local v175=969 -(12 + 17 + 940) ;local v176;while true do if (((0 + (0 -0))==v175) or ((189 + 1647)>(801 + 3555))) then v176=v93[2 + 0 ];v91[v176]=v91[v176]();break;end end else local v177=0 + 0 ;local v178;local v179;local v180;while true do if ((v177==(1868 -(522 + 1346))) or ((5497 -(1088 + 759))<=(1816 + 128))) then v178=0 + 0 ;v179=nil;v177=2 -1 ;end if ((v177==1) or (((867 -(424 + 38)) + (2088 -(999 + 144)))<=(2755 -(354 + 1595)))) then v180=nil;while true do if (((4555 -(418 + 148))>(1106 + 1181 + 303)) and (v178==(1680 -(1592 + 88)))) then v179=(0 -0) + 0 ;v180=nil;v178=4 -3 ;end if ((v178==(2 -1)) or ((58 + 117)>=(3739 -2986))) then while true do if ((v179==(0 -0)) or ((994 + 441)>(16872 -12353))) then v180=v93[2 -0 ];v91[v180]=v91[v180](v13(v91,v180 + 1 + 0 ,v70));break;end end break;end end break;end end end elseif ((v94==(36 -13)) or ((1447 -(298 + 19))<=((218 -139) + 295))) then local v181=563 -(371 + 192) ;local v182;local v183;local v184;local v185;while true do if (((2731 -(620 + 145))>(1450 -943)) and (v181==(1938 -(704 + 1233)))) then local v199=(0 -0) + 0 ;while true do if (((5242 -3416)<(1765 + 2431)) and (v199==((1342 -(370 + 972)) -(1264 -(496 + 768))))) then v70=(v184 + v182) -(1500 -(459 + 1040)) ;v185=0 + 0 ;v199=1474 -(721 + 752) ;end if (((6121 -2262)>=(4591 -(275 + 1306))) and ((4 -3)==v199)) then v181=2 + 0 ;break;end end end if (((2865 -(515 + 1125 + 217))<(3424 + 1309)) and (v181==(1334 -(1128 + 206)))) then v182=v93[2 + 0 ];v183,v184=v88(v91[v182](v13(v91,v182 + (2 -1) ,v93[986 -(751 + 232) ])));v181=1 -0 ;end if ((v181==(2 + 0)) or ((2503 + 73)<=(288 + 31))) then for v205=v182,v70 do local v206=0;local v207;while true do if ((v206==(0 + 0)) or ((4569 -(579 + 1401))<(658 -389))) then v207=74 -(47 + 27) ;while true do if (((872 -610)<(1180 + 1748)) and (v207==(420 -(37 + 383)))) then v185=v185 + (1550 -(1183 + 300 + 66)) ;v91[v205]=v183[v185];break;end end break;end end end break;end end else v91[v93[1408 -(279 + 1127) ]]=v93[372 -(38 + 331) ]~=(0 -0) ;end elseif (((1243 + 1149)<=2990) and (v94<=(964 -(516 + 422)))) then if ((v94==(1132 -(366 + 451 + 290))) or ((69 + 253)>(6753 -2700))) then if (v91[v93[1425 -(883 + 540) ]] or ((10218 -6517)>=(4530 -(227 + (651 -(394 + 216)))))) then v69=v69 + (726 -(607 + 118)) ;else v69=v93[8 -5 ];end else do return;end end elseif ((v94>(1755 -(1395 + 333))) or ((1577 + 436)>(2537 + 360))) then v69=v93[74 -(37 + 34) ];else v91[v93[2 + 0 ]]=v91[v93[1 + 2 ]][v93[1294 -(946 + 344) ]];end v69=v69 + 1 + 0 ;break;end if ((v97==(0 -0)) or ((5072 -2133)==(5100 -(1037 + (2025 -1590))))) then local v107=0 + 0 ;while true do if ((v107==(0 -0)) or ((6184 -(789 + 1163))<=(4408 -(10 + 974)))) then v93=v85[v69];v94=v93[1 -0 ];v107=1838 -(30 + (2018 -(44 + 167))) ;end if ((v107==(720 -(189 + 530))) or ((3314 + 176 + 1482)<((2431 -(94 + 909)) -1000))) then v97=1 + 0 ;break;end end end end break;end end end end;v68=3;end if (0==v68) then v69=1;v70= -1;v68=1;end if (v68==1) then v71={...};v72=v12("#",...) -1 ;v68=2;end if (v68==3) then A,B=v32(v11(v73));if  not A[1] then local v98=v35[4][v69] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
